from settings import VIEW_LANG
from PIL import ImageGrab
from pytesseract import image_to_string, pytesseract
import uuid

# Sets the path of the Tesseract OCR executable file on a Windows operating system.
pytesseract.tesseract_cmd = 'C:\\Program Files\\Tesseract-OCR\\tesseract.exe'


class Capture:
    """
    Class containing two methods, one to capture a section of the screen and one to extract text from an image.
    """

    def __init__(self) -> None:
        # Assign the language of the text you are looking for in the image.
        self.language = VIEW_LANG
        # Assign the config attribute with the value "--psm 11"
        self.config = "--psm 11"
        # Indicates if the capture that was made is shown
        self.view_capture = False
        # Indicates if the image is to be saved
        self.save_capture = False
        # Indicates the base name that the saved capture will have
        self.name_capture = "capture_"

    def capture_window(self, bbox):
        """This method captures the camera section passed by parameter.

        Args:
            x1 (int): Coordinated x1
            y1 (int): Coordinated y1
            x2 (int): Coordinated x2
            y2 (int): Coordinated y2
        """

        # Use the grab method of the ImageGrab module to capture the image of the area defined by bbox
        img = ImageGrab.grab(bbox=bbox)

        # If the view_capture attribute is True
        # Show captured image
        if self.view_capture:
            img.show()

        # If the save_capture attribute is True
        # Save the captured image with a name consisting of name_capture and a unique identifier generated by uuid
        if self.save_capture:
            img.save(f"{self.name_capture}{uuid.uuid4()}.jpg")

        # Returns the captured image
        return img

    # Definir un método llamado get_text_by_img que recibe un parámetro: img

    def get_text_by_img(self, img) -> list:
        """This function gets the text of an image.

        Args:
            img (Imagen): Image from where the text will be extracted.

        Returns:
            str: Extracted text with list.
        """

        # Use the image_to_string method of the PyTesseract module to extract the text from the image using the langauge and config attributes
        text_raw = image_to_string(image=img, lang=self.language,
                                   config=self.config)
        # Clean text by removing whitespace at the end and start of each line and joining lines with newlines (\n)
        text = "\n".join([linea.rstrip()
                         for linea in text_raw.splitlines() if linea.strip()])
        # Create a list called lines with each line of text as an element
        lines = text.splitlines()
        return lines  # Return the lines
